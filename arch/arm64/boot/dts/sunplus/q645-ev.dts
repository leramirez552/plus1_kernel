// SPDX-License-Identifier: (GPL-2.0 OR MIT)
/* Copyright (c) 2018-2019 Sunplus */

/dts-v1/;

#define CONFIG_SOC_Q645

#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/clock/sp-q645.h>
#include <dt-bindings/reset/sp-q645.h>
#include <dt-bindings/pinctrl/sppctl-q645.h>

/* Clock frequency (in Hz) of the PCB crystal for rtcclk */
#define RTCCLK_FREQ             27000000

/ {
	model = "Sunplus Q645";
	compatible = "sunplus,sp-q645";
	interrupt-parent = <&gic>;
	#address-cells = <2>;
	#size-cells = <2>;

	aliases {
		serial0 = &uart0;
		spi0 = &sp_spinor0;
	};

	chosen {
		bootargs = "console=ttyS0,921600 earlycon loglevel=8";
		stdout-path = "serial0:921600n8";
	};

	memory@00000000 {
		device_type = "memory";
		reg = <0x00 0x00 0x00 0x10000000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		sec_region {
			reg = <0x00 0x00 0x00 0x400000>;
		};
	};

	clocks {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		extclk: clk@osc0 {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <RTCCLK_FREQ>;
			clock-output-names = "extclk";
		};

		clkc: clkc@0xf8000004 {
			#clock-cells = <1>;
			compatible = "sunplus,q645-clkc";
			reg = <0x00 0xf8000004 0x00 0x28>, // G0.1 ~ G0.10
			      <0x00 0xf8000200 0x00 0x80>; // G4
		};
	};

	cpus {
		#address-cells = <1>;
		#size-cells = <0>;

		cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a55";
			reg = <0x0000>;
			enable-method = "spin-table";
			cpu-release-addr = <0x00 0xfa23fff0>;
			next-level-cache = <&L2_0>;
		};

		cpu@1 {
			device_type = "cpu";
			compatible = "arm,cortex-a55";
			reg = <0x0100>;
			enable-method = "spin-table";
			cpu-release-addr = <0x00 0xfa23ffe8>;
			next-level-cache = <&L2_1>;
		};

		cpu@2 {
			device_type = "cpu";
			compatible = "arm,cortex-a55";
			reg = <0x0200>;
			enable-method = "spin-table";
			cpu-release-addr = <0x00 0xfa23ffe0>;
			next-level-cache = <&L2_2>;
		};

		cpu@3 {
			device_type = "cpu";
			compatible = "arm,cortex-a55";
			reg = <0x0300>;
			enable-method = "spin-table";
			cpu-release-addr = <0x00 0xfa23ffd8>;
			next-level-cache = <&L2_3>;
		};

		L2_0: l2-cache-0 {
			compatible = "cache";
			cache-level = <2>;
			next-level-cache = <&L3>;
		};

		L2_1: l2-cache-1 {
			compatible = "cache";
			cache-level = <2>;
			next-level-cache = <&L3>;
		};

		L2_2: l2-cache-2 {
			compatible = "cache";
			cache-level = <2>;
			next-level-cache = <&L3>;
		};

		L2_3: l2-cache-3 {
			compatible = "cache";
			cache-level = <2>;
			next-level-cache = <&L3>;
		};

		L3: l3-cache {
			compatible = "cache";
			cache-level = <3>;
		};
	};

	gic: interrupt-controller@0xfa001000 {
		compatible = "arm,gic-400";
		#interrupt-cells = <3>;
		interrupt-controller;
		reg = <0x00 0xfa001000 0x00 0x1000>,
		      <0x00 0xfa002000 0x00 0x2000>,
		      <0x00 0xfa004000 0x00 0x2000>,
		      <0x00 0xfa006000 0x00 0x2000>;
	};

	timer {
		compatible = "arm,armv8-timer";
		interrupt-parent = <&gic>;
		clock-frequency = <RTCCLK_FREQ>;
		interrupts = <GIC_PPI 13 (GIC_CPU_MASK_RAW(15) | IRQ_TYPE_LEVEL_LOW)>,
			     <GIC_PPI 14 (GIC_CPU_MASK_RAW(15) | IRQ_TYPE_LEVEL_LOW)>,
			     <GIC_PPI 11 (GIC_CPU_MASK_RAW(15) | IRQ_TYPE_LEVEL_LOW)>,
			     <GIC_PPI 10 (GIC_CPU_MASK_RAW(15) | IRQ_TYPE_LEVEL_LOW)>;
	};

	rstc: reset@0xf8000054 {
		compatible = "sunplus,q645-reset";
		#reset-cells = <1>;
		reg = <0x00 0xf8000054 0x00 0x28>;
		reg-names = "reset";
	};

	uart0: serial@0xf8000900 {
		compatible = "sunplus,q645-uart",
			     "sunplus,sp7021-uart";
		reg = <0x00 0xf8000900 0x00 0x80>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 60 IRQ_TYPE_LEVEL_HIGH>,
			     <GIC_SPI 71 IRQ_TYPE_LEVEL_HIGH>,
			     <GIC_SPI 72 IRQ_TYPE_LEVEL_HIGH>;
		clocks = <&extclk>;
		resets = <&rstc RST_UA0>;
		pinctrl-names = "default";
		pinctrl-0 = <&uart0_pins>;
	};

	sp_spinor0: spinor@0xf8000b00 {
		compatible = "sunplus,q645-spi-nor";
		reg = <0x0 0xf8000b00 0x0 0x80>, <0x0 0xf8000080 0x0 0x80>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 18 IRQ_TYPE_LEVEL_HIGH>;
		clocks = <&clkc SPIFL>;
		resets = <&rstc RST_SPIFL>;
		pinctrl-names = "default";
		pinctrl-0 = <&spi_nor_pins>;
		spi-max-frequency = <50000000>;
		spi-chip-selection = <0>;
		read-timing-selection = <0>;
		write-timing-selection = <0>;
	};

	spinand0: spinand@0xf8002b80 {
		compatible = "sunplus,q645-spi-nand";
		reg = <0x0 0xf8002b80 0x0 0x60>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 23 IRQ_TYPE_LEVEL_HIGH>;
		linux,part-probe = "ofpart", "sunplus_part";
		clocks = <&clkc SPIND>;
		resets = <&rstc RST_SPIND>;
		pinctrl-names = "default";
		pinctrl-0 = <&spi_nand_pins>;
	};

	bch0: bch@0xf8101000 {
		compatible = "sunplus,q645-bch";
		reg = <0x0 0xf8101000 0x0 0x30>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 24 IRQ_TYPE_LEVEL_HIGH>;
		clocks = <&clkc BCH>;
		resets = <&rstc RST_BCH>;
	};

	malig31: malig31@0xf8170000 {
		compatible = "sunplus,q645-malig31";
		reg = <0x00 0xf8170000 0x00 0x3fff>;
		interrupt-parent = <&gic>;
//		interrupts = <GIC_SPI 169 IRQ_TYPE_LEVEL_HIGH>,
		interrupts = 
			     <GIC_SPI 170 IRQ_TYPE_LEVEL_HIGH>,
			     <GIC_SPI 171 IRQ_TYPE_LEVEL_HIGH>,
			     <GIC_SPI 172 IRQ_TYPE_LEVEL_HIGH>;
//		interrupt-names = "EVENT", "JOB", "MMU", "GPU";
		interrupt-names = "JOB", "MMU", "GPU";
		clocks = <&clkc GPU>;
		clock-names = "clk_mali";
		resets = <&rstc RST_GPU>;
	};

	mmc0: mmc@0xf8003b00 {
		compatible = "sunplus,q645-emmc";
		reg = <0x0 0xf8003b00 0x0 0x180>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 17 IRQ_TYPE_LEVEL_HIGH>;
		clocks = <&clkc CARD_CTL0>;
		resets = <&rstc RST_CARD_CTL0>;
		pinctrl-names = "default";
		pinctrl-0 = <&emmc_pins>;
		bus-width = <8>;
		max-frequency = <45000000>;
		non-removable;
		disable-wp;
		cap-mmc-highspeed;
		mmc-ddr-3_3v;
		no-sdio;
		no-sd;
	};

	mmc1: mmc@0xf8003e80 {
		compatible = "sunplus,q645-card";
		reg = <0x0 0xf8003e80 0x0 0x180>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 16 IRQ_TYPE_LEVEL_HIGH>;
		clocks = <&clkc CARD_CTL1>;
		resets = <&rstc RST_CARD_CTL1>;
		pinctrl-names = "default";
		pinctrl-0 = <&sdcard_pins>;
		sdio-gpios = <&pctl 62 GPIO_ACTIVE_HIGH>;
		bus-width = <4>;
		max-frequency = <52000000>;
		disable-wp;
		cap-sd-highspeed;
		no-sdio;
		no-mmc;
	};

	sdio: sdio@0xf8008400 {
		compatible = "sunplus,q645-sdio";
		reg = < 0x0 0xf8008400 0x0 0x180>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 15 IRQ_TYPE_LEVEL_HIGH>;
		clocks = <&clkc CARD_CTL2>;
		resets = <&rstc RST_CARD_CTL2>;
		pinctrl-names = "default";
		pinctrl-0 = <&sdio_pins>;
		bus-width = <4>;
		max-frequency = <52000000>;
		non-removable;
		disable-wp;
		cap-sd-highspeed;
		cap-sdio-irq;
		no-sd;
		no-mmc;
		#address-cells = <1>;
		#size-cells = <0>;
	};

	ehci0: usb@0xf8102100 {
		compatible = "sunplus,q645-usb-ehci0";
		clocks = <&clkc USBC0>;
		resets = <&rstc RST_USBC0>;
		reg = <0x00 0xf8102100 0x00 0x68>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 183 IRQ_TYPE_LEVEL_HIGH>;
	};

	ohci0: usb@0xf8102080 {
		compatible = "sunplus,q645-usb-ohci0";
		clocks = <&clkc USBC0>;
		resets = <&rstc RST_USBC0>;
		reg = <0x00 0xf8102080 0x00 0x68>, <0x00 0xf8000000 0x00 0x80>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 184 IRQ_TYPE_LEVEL_HIGH>;
	};

	usbdrd3_0: usb@0xf80a1000{
		compatible = "sunplus,q645-dwcusb3";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		status = "disabled";

		usbdrd_dwc3_0: dwc3 {
			compatible = "synopsys,dwc3";
			reg = <0x0 0xf80a1000 0x0 0xe000>;
			clocks = <&clkc USB30C0>, <&clkc USB30C0>, <&clkc USB30C0>;
			clock-names = "ref","bus_early","suspend";
			resets = <&rstc RST_USB30C0>;
			interrupt-parent = <&gic>;
			interrupts = <GIC_SPI 180 IRQ_TYPE_LEVEL_HIGH>;
			maximum-speed = "super-speed";
			dr_mode = "host";
			snps,dis_u2_susphy_quirk;
			phy_type = "utmi_wide";
			status = "disabled";
		};
	};

	u3phy0: uphy@0xf80bd000 {
		compatible = "sunplus,q645-usb3-phy";
		clocks = <&clkc U3PHY0>;
		clock-names = "clkc_u3phy";
		resets = <&rstc RST_USB30C0>;
		reset-names = "rstc_u3phy";
		reg = <0x0 0xf80bd000 0x0 0x80>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 191 IRQ_TYPE_LEVEL_HIGH>;
		status = "disabled";
	};

	usbdrd3_1: usb@0xf80af000 {
		compatible = "sunplus,q645-dwcusb3";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		status = "disabled";

		usbdrd_dwc3_1: dwc3 {
			compatible = "synopsys,dwc3";
			reg = <0x0 0xf80af000 0x0 0xe000>;
			clocks = <&clkc USB30C1>, <&clkc USB30C1>, <&clkc USB30C1>;
			clock-names = "ref","bus_early","suspend";
			resets = <&rstc RST_USB30C1>;
			interrupt-parent = <&gic>;
			interrupts = <GIC_SPI 179 IRQ_TYPE_LEVEL_HIGH>;
			maximum-speed = "super-speed";
			dr_mode = "host";
			snps,dis_u2_susphy_quirk;
			phy_type = "utmi_wide";
			status = "disabled";
		};
	};

	u3phy1: uphy@0xf80be000 {
		compatible = "sunplus,q645-usb3-phy";
		clocks = <&clkc U3PHY1>;
		clock-names = "clkc_u3phy";
		resets = <&rstc RST_U3PHY1>;
		reset-names = "rstc_u3phy";
		reg = <0x0 0xf80be000 0x0 0x80>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 192 IRQ_TYPE_LEVEL_HIGH>;
		status = "disabled";
	};

	pctl: pctl@0xf8000100 {
		compatible = "sunplus,q645-pctl";
		reg = <0x0 0xf8000100 0x0 0x100>,
		      <0x0 0xf8000300 0x0 0x80>,
		      <0x0 0xf8000380 0x0 0x80>,
		      <0x0 0xf80032e4 0x0 0x1c>,
		      <0x0 0xf8000080 0x0 0x20>;
		gpio-controller;
		#gpio-cells = <2>;

		uart0_pins: pinmux_uart0_pins {
			sppctl,function = "UART0";
			sppctl,groups = "UART0";
		};

		emmc_pins: pinmux_emmc_pins {
			sppctl,function = "CARD0_EMMC";
			sppctl,groups = "CARD0_EMMC";
		};

		sdcard_pins: pinmux_sdcard_pins {
			sppctl,function = "SD_CARD";
			sppctl,groups = "SD_CARD";
			sppctl,pins = <SPPCTL_IOPAD(62,SPPCTL_PCTL_G_GPIO,0,0) >;
		};

		sdio_pins: pinmux_sdio_pins {
			sppctl,function = "SDIO";
			sppctl,groups = "SDIO";
		};

		spi_nor_pins: pinmux_spi_nor_pins {
			sppctl,function = "SPI_FLASH";
			sppctl,groups = "SPI_FLASH1";
		};

		spi_nand_pins: pinmux_spi_nand_pins {
			sppctl,function = "SPI_NAND";
			sppctl,groups = "SPI_NAND1";
		};
	};
};
