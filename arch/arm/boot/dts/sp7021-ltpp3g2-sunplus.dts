/dts-v1/;

#include "sp7021-common.dtsi"

/ {
	model = "SP7021LTPPG2 SUNPLUS";

	chosen {
		bootargs = "console=ttyS0,115200 root=/dev/ram rw loglevel=8 user_debug=255 earlyprintk";
		stdout-path = "serial0:115200n8";
	};

	memory {
		reg = <0x00000000 0x20000000>; /* 512MB */
	};

	soc@B {
		led {
			compatible = "gpio-leds";
			pinctrl-names = "default", "sleep";
			pinctrl-0 = <&gpio_leds_pins>;
			pinctrl-1 = <&leds_s0_slp>;
			system-led {
				label = "system-led";
				gpios = <&pctl 6 GPIO_ACTIVE_HIGH>;
				default-state = "off";
				linux,default-trigger = "heartbeat";
			};
			led@2 {
				label = "SG";
				gpios = <&pctl 7 GPIO_ACTIVE_HIGH>;
				linux,default-trigger = "mmc0";
				default-state = "off";
			};			
		};
		tpsleds: tpsleds {
				compatible = "tpsleds";
				pinctrl-names = "default";
				pinctrl-0 = <&tpsleds_pins>;
				status = "okay";
				init-val = <0x0>;
				gpios = <&pctl 5 GPIO_ACTIVE_HIGH
					&pctl 4 GPIO_ACTIVE_HIGH
		    >;
		};
		buzzer0 {
				compatible = "pwm-beeper";
				pinctrl-names = "default";
				pinctrl-0 = <&buzzer0_pins>;
				pwms = <&pwm 0 1000000 0>;
		};	
		i2c_tps: i2c-tps { /* eeprom */
			compatible = "i2c-gpio";
			i2c-gpio,scl-open-drain;
			i2c-gpio,sda-open-drain;
			i2c-gpio,delay-us = <1>;/* ~100 kHz */
			#address-cells = <1>;
			#size-cells = <0>;
			pinctrl-names = "default";
			pinctrl-0 = <&pins_i2ctps>;
			gpios = <&pctl 2 GPIO_ACTIVE_HIGH     /* SDA */
					     &pctl 1 GPIO_ACTIVE_HIGH     /* SCL */
		                                   >;
			eeprom: eeprom@50 {
			compatible = "at,24c16";
			reg = <0x50>;
			pagesize = <16>;
			};
		};					
	};
};

&sp_display {
	ui_width = <1280>;
	ui_height = <720>;
	ui_format = <0x8>;
		/* 0x2 = 8bpp (ARGB)
		 * 0x4 = YUY2
		 * 0x8 = RGB565
		 * 0x9 = ARGB1555
		 * 0xa = RGBA4444
		 * 0xb = ARGB4444
		 * 0xd = RGBA8888
		 * 0xe = ARGB8888 */
};

&spi_controller0 {
	spi-max-frequency = <50000000>;
	spi-cpha;
	spi-cpol;
	pinctrl-names = "default";
	pinctrl-0 = <&pins_spi0>;
	status = "disabled";
};

&spi_controller1 {
	spi-max-frequency = <50000000>;
	spi-cpha;
	spi-cpol;
	status = "disabled";
};

&spi_controller2 {
	spi-max-frequency = <50000000>;
	spi-cpha;
	spi-cpol;
	status = "disabled";
};

&spi_controller3 {
	spi-max-frequency = <50000000>;
	spi-slave;
	status = "disabled";
};

&i2cm0 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2cm0_pins>;
	status = "disabled";
};

&i2cm1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2cm1_mipicsi_tpm_pins>;
	#address-cells = <1>;
	#size-cells = <0>;
	st33htpi: st33htpi@2e {
		compatible = "st,st33htpm-i2c";
		reg = <0x2e>;
		status = "disabled";
	};
};

&i2cm2 {
	clock-frequency = <100000>;
	status = "disabled";
};

&i2cm3 {
	clock-frequency = <100000>;
	status = "disabled";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_uart1>;
	status = "disabled";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_uart2>;
	status = "disabled";
};

&uart3 {
	status = "disabled";
};

// AP6256 Bluetooth
&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_btuart &pins_bt_reset>;
  status = "disabled";
  // this: enable (bt) | enable (uart4), pins_uart4
};

&sdio {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_sdio>;
#if 0 // AP6256 WiFi
	status = "okay";
#else
	status = "disabled";
#endif
};

&sp_uphy0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_vbus_usb0>;
	vbus-gpio = <&pctl 90 GPIO_ACTIVE_HIGH>;
};

&sp_uphy1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_vbus_usb1>;
	vbus-gpio = <&pctl 91 GPIO_ACTIVE_HIGH>;
};

&l2sw {
	pinctrl-names = "default";
	pinctrl-0 = <&l2sw_demo_board_v3_pins>;
	mode = < 1 >;
		/* 0 = daisy-chain mode
		 * 1 = dual NIC mode
		 * 2 = daisy-chain mode (disable SA learning) */
};

&mmc0 {
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_mux>;
};

&mmc1 {
	pinctrl-names = "default";
	pinctrl-0 = <&mmc1_mux &mmc1_mux_cd>;
	cd-gpios = <&pctl 0 GPIO_ACTIVE_LOW>;
};

&spinand0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_spinand0>;
	status = "disabled";
};

&sp_spinor0 {
	spi-max-frequency = <50000000>;
	spi-chip-selection = <0>;
	status = "disabled";
};

&hdmitx {
	pinctrl-names = "default";
	pinctrl-0 = <&hdmi_A_tx1>;
};

&mipicsi0 {
	i2c-id = <1>;
	cam_gpio0-gpios = <&pctl 92 GPIO_ACTIVE_HIGH>;
	cam_gpio1-gpios = <&pctl 93 GPIO_ACTIVE_HIGH>;
	pinctrl-names = "default";
	pinctrl-0 = <&mipicsi0_pins>;
	status = "disabled";
};

&mipicsi1 {
	status = "disabled";
};

&rtc {
	charging-mode = <0xE>;
	/*
	 *      0xE     Disable
	 *      0x1     0.86mA (2K Ohm with diode)
	 *      0x5     1.81mA (250 Ohm with diode)
	 *      0x9     2.07mA (50 Ohm with diode)
	 *      0xD     16.0mA (0 Ohm with diode)
	 *      0x3     1.36mA (2K Ohm without diode)
	 *      0x7     3.99mA (250 Ohm without diode)
	 *      0xB     4.41mA (50 Ohm without diode)
	 *      0xF     16.0mA (0 Ohm without diode)    */
};

&audio {
	status = "disabled";
};

&pwm {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_pwm>;
	//status = "disabled";
};

&pctl {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_gpio_nobinded>;

	pins_gpio_nobinded: pins_gpio_nobinded {
		sppctl,pins = <
			SPPCTL_IOPAD(30,SPPCTL_PCTL_G_GPIO,0,0)   /* was L2SW_LED_FLASH1 */
			SPPCTL_IOPAD(39,SPPCTL_PCTL_G_GPIO,0,0)   /* was L2SW_LED_ON1  */
		>;
	};
	
	i2cm0_pins: pinmux_i2cm0_pins {
		sppctl,pins = <
			/*SPPCTL_IOPAD(12,SPPCTL_PCTL_G_PMUX,MUXF_I2CM0_DAT,0)*/
			/*SPPCTL_IOPAD(13,SPPCTL_PCTL_G_PMUX,MUXF_I2CM0_CLK,0)*/
		>;
	};

	i2cm1_mipicsi_tpm_pins: pinmux_i2cm1_mipicsi_tpm_pins {
		sppctl,pins = <
			/*SPPCTL_IOPAD(64,SPPCTL_PCTL_G_PMUX,MUXF_I2CM1_DAT,0)*/
			/*SPPCTL_IOPAD(61,SPPCTL_PCTL_G_PMUX,MUXF_I2CM1_CLK,0)*/			
		>;
	};

	pins_i2ctps: pins_i2ctps {
  	sppctl,pins = <
			SPPCTL_IOPAD(1,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT|SPPCTL_PCTL_L_ONV|SPPCTL_PCTL_L_ODR)
			SPPCTL_IOPAD(2,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT|SPPCTL_PCTL_L_ONV|SPPCTL_PCTL_L_ODR)
		>;
	};

	l2sw_demo_board_v3_pins: l2sw_demo_board_v3_pins {
		sppctl,pins = <
			SPPCTL_IOPAD(63,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_CLK_OUT,0)
			SPPCTL_IOPAD(71,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_MAC_SMI_MDC,0)
			SPPCTL_IOPAD(64,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_MAC_SMI_MDIO,0)			
			SPPCTL_IOPAD(62,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_TXEN,0)
			SPPCTL_IOPAD(61,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_TXD0,0)
			SPPCTL_IOPAD(60,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_TXD1,0)
			SPPCTL_IOPAD(59,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_CRSDV,0)
			SPPCTL_IOPAD(58,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_RXD0,0)
			SPPCTL_IOPAD(57,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_RXD1,0)
			SPPCTL_IOPAD(55,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_TXEN,0)
			SPPCTL_IOPAD(54,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_TXD0,0)
			SPPCTL_IOPAD(53,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_TXD1,0)
			SPPCTL_IOPAD(52,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_CRSDV,0)
			SPPCTL_IOPAD(51,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_RXD0,0)
			SPPCTL_IOPAD(50,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_RXD1,0)			
		>;
		sppctl,zero_func = <
			MUXF_L2SW_LED_FLASH0
			MUXF_L2SW_LED_ON0
			MUXF_L2SW_LED_FLASH1
			MUXF_L2SW_LED_ON1
			MUXF_DAISY_MODE
			MUXF_L2SW_P0_MAC_RMII_RXER
			MUXF_L2SW_P1_MAC_RMII_RXER
			GROP_SPI_FLASH
		>;
	};

	// AP6256 WiFi
	pins_sdio: pins_sdio {
		sppctl,pins = <
			SPPCTL_IOPAD(44,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_D1,0)
			SPPCTL_IOPAD(45,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_D0,0)
			SPPCTL_IOPAD(46,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_CLK,0)
			SPPCTL_IOPAD(47,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_CMD,0)
			SPPCTL_IOPAD(42,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_D3,0)
			SPPCTL_IOPAD(43,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_D2,0)
		>;
	};

	pins_sdio_reset: pins_sdio_reset {
		sppctl,pins = <
		/* additional reset pin for BRCM */
			SPPCTL_IOPAD(83,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OU1)
		>;
	};
 
	pins_vbus_usb0: pins_vbus_usb0 {
		sppctl,pins = <
			SPPCTL_IOPAD(90,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT)
		>;
	};
	pins_vbus_usb1: pins_vbus_usb1 {
		sppctl,pins = <
			SPPCTL_IOPAD(91,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT)
		>;
	}; 
 
	mmc1_mux_cd: mmc1_mux_cd {
		sppctl,pins = < SPPCTL_IOPAD(0,SPPCTL_PCTL_G_GPIO,0,0) >;
	};

	mipicsi0_pins: pinmux_mipicsi0_pins {
		sppctl,pins = <
			/*SPPCTL_IOPAD(92,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OU1)*/
			/*SPPCTL_IOPAD(93,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OU1)*/
		>;
	};

	gpio_leds_pins: pinmux_gpio_leds_pins {
		sppctl,pins = < SPPCTL_IOPAD(6,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT) >;
	};

	leds_s0_slp: user_leds_s0_slp {
		sppctl,pins = <
			SPPCTL_IOPAD(7,SPPCTL_PCTL_G_GPIO,0,0)
		>;
	};

	tpsleds_pins: user_tpsleds_pins {
		sppctl,pins = <
			SPPCTL_IOPAD(4,SPPCTL_PCTL_G_GPIO,0,0)
			SPPCTL_IOPAD(5,SPPCTL_PCTL_G_GPIO,0,0)
		>;
	};

	buzzer0_pins: user_buzzer0_pins {
		sppctl,pins = <
			SPPCTL_IOPAD(48,SPPCTL_PCTL_G_PMUX,MUXF_PWM0,0)
		>;
	};

	pins_uart1: pins_uart1 {
		sppctl,pins = <
      SPPCTL_IOPAD(8,SPPCTL_PCTL_G_PMUX,MUXF_UA1_TX,0)
      SPPCTL_IOPAD(9,SPPCTL_PCTL_G_PMUX,MUXF_UA1_RX,0)
      SPPCTL_IOPAD(10,SPPCTL_PCTL_G_PMUX,MUXF_UA1_RTS,0)
      SPPCTL_IOPAD(11,SPPCTL_PCTL_G_PMUX,MUXF_UA1_CTS,0)		
		>;
	};

	pins_uart2: pins_uart2 {
		sppctl,pins = <
      SPPCTL_IOPAD(12,SPPCTL_PCTL_G_PMUX,MUXF_UA2_TX,0)
      SPPCTL_IOPAD(13,SPPCTL_PCTL_G_PMUX,MUXF_UA2_RX,0)
      SPPCTL_IOPAD(14,SPPCTL_PCTL_G_PMUX,MUXF_UA2_RTS,0)
      SPPCTL_IOPAD(15,SPPCTL_PCTL_G_PMUX,MUXF_UA2_CTS,0)
		>;
	};

 pins_uart3: pins_uart3 {
    sppctl,pins = <
      SPPCTL_IOPAD(16,SPPCTL_PCTL_G_PMUX,MUXF_UA3_TX,0)
      SPPCTL_IOPAD(17,SPPCTL_PCTL_G_PMUX,MUXF_UA3_RX,0)
      SPPCTL_IOPAD(18,SPPCTL_PCTL_G_PMUX,MUXF_UA3_RTS,0)
      SPPCTL_IOPAD(19,SPPCTL_PCTL_G_PMUX,MUXF_UA3_CTS,0)
    >;
 };

	// AP6256 Bluetooth
	pins_uart4: pins_uart4 {
		sppctl,pins = <
      SPPCTL_IOPAD(20,SPPCTL_PCTL_G_PMUX,MUXF_UA4_TX,0)
      SPPCTL_IOPAD(21,SPPCTL_PCTL_G_PMUX,MUXF_UA4_RX,0)
      SPPCTL_IOPAD(22,SPPCTL_PCTL_G_PMUX,MUXF_UA4_RTS,0)
      SPPCTL_IOPAD(23,SPPCTL_PCTL_G_PMUX,MUXF_UA4_CTS,0)
		>;
	};

 pins_btuart: pins_btuart {
    sppctl,pins = <
      SPPCTL_IOPAD(40,SPPCTL_PCTL_G_PMUX,MUXF_UA4_RX,0)
      SPPCTL_IOPAD(41,SPPCTL_PCTL_G_PMUX,MUXF_UA4_TX,0)
      SPPCTL_IOPAD(56,SPPCTL_PCTL_G_PMUX,MUXF_UA4_RTS,SPPCTL_PCTL_L_ONV)
      SPPCTL_IOPAD(49,SPPCTL_PCTL_G_PMUX,MUXF_UA4_CTS,0)
    >;
 };
 
 pins_bt_reset: pins_bt_reset {
    sppctl,pins = <
      SPPCTL_IOPAD(82,SPPCTL_PCTL_G_GPIO,0,0)
    >;
 };

	pins_spi0: pinmux_pins_spi0 {
		sppctl,pins = <
/*			SPPCTL_IOPAD(26,SPPCTL_PCTL_G_PMUX,MUXF_SPI0S_EN,0) */
/*			SPPCTL_IOPAD(23,SPPCTL_PCTL_G_PMUX,MUXF_SPI0S_DO,0) */
/*			SPPCTL_IOPAD(25,SPPCTL_PCTL_G_PMUX,MUXF_SPI0S_DI,0) */
/*			SPPCTL_IOPAD(27,SPPCTL_PCTL_G_PMUX,MUXF_SPI0S_CLK,0) */
		>;
	};

	pins_pwm: pinmux_pins_pwm {
		sppctl,pins = <
			/*SPPCTL_IOPAD(36,SPPCTL_PCTL_G_PMUX,MUXF_PWM0,0)*/
			/*SPPCTL_IOPAD(37,SPPCTL_PCTL_G_PMUX,MUXF_PWM1,0)*/
			/*SPPCTL_IOPAD(38,SPPCTL_PCTL_G_PMUX,MUXF_PWM2,0)*/
			/*SPPCTL_IOPAD(39,SPPCTL_PCTL_G_PMUX,MUXF_PWM3,0)*/
		>;
	};
};
